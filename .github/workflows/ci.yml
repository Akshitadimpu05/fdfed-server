name: CI/CD Pipeline for Vercel

on:
  push:
    branches:
      - "**" # Run on all branches

jobs:

  # STAGE 1: TESTING
  test:
    name: ðŸ§ª Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Checkout Code
        uses: actions/checkout@v3

      - name: ðŸ§° Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: ðŸ’¾ Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: ðŸ“¦ Install Dependencies
        run: npm ci

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: ðŸ§ª Run Tests
        run: npm test

  lint:
    name: ðŸ§¹ Run Lint Checks
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Checkout Code
        uses: actions/checkout@v3

      - name: ðŸ§° Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: ðŸ’¾ Restore node_modules from cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: ðŸ“¦ Install Dependencies
        run: npm ci

      - name: ðŸ§ª Run Lint
        run: npm run lint

  # STAGE 2: DEPLOYMENT (only on 'prod' branch)
  deploy:
    name: ðŸš€ Deploy to Vercel (Production)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/prod' && success()
    steps:
      - name: ðŸ”— Trigger Vercel Deploy Hook
        run: curl -X POST ${{ secrets.VERCEL_DEPLOY_HOOK }}

